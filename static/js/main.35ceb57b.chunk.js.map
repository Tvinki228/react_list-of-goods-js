{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","App","useState","isReversed","setIsReversed","sortMethod","setSortMethod","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","formatGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"mPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,sBACnBC,EAAiB,iBAuBhB,IAAMC,EAAM,WACjB,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAzBR,SAAqBC,EAAOH,EAAYF,GACtC,IAAMM,EAAa,YAAOD,GAE1B,OAAQH,GACN,KAAKN,EACHU,EAAcC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACzD,MACF,KAAKZ,EACHS,EAAcC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAU9D,OAJIX,GACFM,EAAcM,UAGTN,EAOcO,CAAYlB,EAAiBO,EAAYF,GAE9D,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMZ,EAAcP,IAC7BoB,KAAK,SACLF,UAAWG,IAAG,iBAAkB,CAC9B,WAAYf,IAAeN,IAJ/B,iCAUA,wBACEmB,QAAS,kBAAMZ,EAAcN,IAC7BmB,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,WAAYf,IAAeL,IAJ/B,4BAUA,wBACEkB,QAAS,kBAAMd,GAAeD,IAC9BgB,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,YAA2B,IAAfjB,IAJhB,sBAUEE,GAAcF,IACd,wBACEe,QAAS,WACPd,GAAc,GACdE,EAAc,KAEhBa,KAAK,SACLF,UAAU,4BANZ,sBAaJ,6BACGV,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC9FlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.35ceb57b.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport { useState } from 'react';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'Sort alphabetically';\nconst SORT_BY_LENGTH = 'Sort by length';\n\nfunction formatGoods(goods, sortMethod, isReversed) {\n  const preparedGoods = [...goods];\n\n  switch (sortMethod) {\n    case SORT_BY_ALPHABET:\n      preparedGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n    case SORT_BY_LENGTH:\n      preparedGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortMethod, setSortMethod] = useState('');\n\n  const visibleGoods = formatGoods(goodsFromServer, sortMethod, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortMethod(SORT_BY_ALPHABET)}\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortMethod !== SORT_BY_ALPHABET,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortMethod(SORT_BY_LENGTH)}\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortMethod !== SORT_BY_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setIsReversed(!isReversed)}\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': isReversed === false,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortMethod || isReversed) && (\n          <button\n            onClick={() => {\n              setIsReversed(false);\n              setSortMethod('');\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}